{"version":3,"sources":["components/AddCat.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCat","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGif","categorias","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","tittle","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","imagen","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"sMAGaA,EAAS,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SAVS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAMlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAlBgB,SAACP,GAErBF,EAAcE,EAAEQ,OAAOF,aAwB/BZ,EAAOe,UAAY,CACfd,cAAee,IAAUC,KAAKC,Y,mCChCrBC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAUH,GAF9C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAM,CACFC,GAAGD,EAAIC,GACPC,OAAOF,EAAIG,MACXX,IAAG,UAACQ,EAAII,cAAL,aAAC,EAAYC,iBAAiBb,QAVvB,kBAaXM,GAbW,4CAAH,sDCENQ,EAAc,SAAC,GAAoB,EAAnBL,GAAoB,IAAjBC,EAAgB,EAAhBA,OAAOV,EAAS,EAATA,IAEnC,OACI,sBAAKe,UAAU,6CAAf,UACO,qBAAKC,IAAKhB,EAAKiB,IAAKP,IAD3B,IAEO,8BAAIA,EAAJ,WCFFQ,EAAU,SAAC,GAAoB,IAAlBpB,EAAiB,EAAjBA,WAEtB,ECJwB,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WAC3B,EAA0BlB,mBAAS,CAC/ByB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OAVAC,qBAAU,WACNzB,EAAOC,GAAYyB,MAAK,SAAAf,GACpBa,EAAS,CACLhB,KAAMG,EACNW,SAAS,SAIlB,CAACrB,IAEGsB,EDXsBI,CAAa,CAAC1B,eAA/B2B,EAAZ,EAAOpB,KAAYc,EAAnB,EAAmBA,QAOnB,OACI,qCACI,qBAAIJ,UAAU,sCAAd,cAAsDjB,EAAtD,OACCqB,GAAW,mBAAGJ,UAAW,sCAAd,0BACX,qBAAKA,UAAU,YAAf,SAEOU,EAAOlB,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEStBiB,EA5BM,WAEjB,MAAoC9C,mBAAS,CAAC,cAA9C,mBAAOkB,EAAP,KAAmBnB,EAAnB,KACA,OACI,qCAEI,+CACA,cAAC,EAAD,CAAQA,cAAeA,IACvB,uBACA,6BAEQmB,EAAWS,KAAI,SAAAT,GAAU,OACrB,cAAC,EAAD,CAEIA,WAAYA,GADPA,YCXjC6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.27dfe1c6.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCat = ({setCategorias}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange=(e)=>{\r\n        \r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategorias(cats=>[inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n            \r\n        </form>\r\n    )\r\n\r\n   \r\n}\r\nAddCat.prototype = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","export const getGif = async (categorias) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categorias)}&limit=25&api_key=T4M00jhEO5pJcHJstVDUnRi2hkcgYy3Z`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs=data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            tittle:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,tittle,url}) => {\r\n    //console.log(id,tittle,url)\r\n    return (\r\n        <div className='card animate__animated animate__backInLeft'>     \r\n               <img src={url} alt={tittle} />,\r\n               <p>{tittle} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n/* import { getGif } from '../helpers/getGifs';*/\r\nimport { GifGridItem } from './GifGridItem'; \r\n\r\nexport const GifGrid = ({ categorias }) => {\r\n    \r\n    const {data:imagen,loading}= useFetchGifs({categorias});\r\n\r\n    /* const [Imagen, setImagen] = useState([]);\r\n    useEffect(()=>{\r\n        getGif(categorias).then(setImagen)\r\n    },[categorias]) */\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__zoomInUp'> {categorias} </h3>\r\n            {loading && <p className= 'animate__animated animate__bounceIn'>Cargando....</p>}\r\n            {<div className='card-grid'>\r\n                {\r\n                    imagen.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ({ categorias }) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGif(categorias).then(img => {\r\n            setstate({\r\n                data: img,\r\n                loading: false\r\n            });\r\n        });\r\n\r\n    }, [categorias]);\r\n    /*  */\r\n    return state;\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCat } from './components/AddCat';\r\nimport { GifGrid } from './components/GifGrid';\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['One punch']);\r\n    return (\r\n        <>\r\n\r\n            <h2> GifExpertApp</h2>\r\n            <AddCat setCategorias={setCategorias} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categorias.map(categorias => (\r\n                        <GifGrid\r\n                            key={categorias}\r\n                            categorias={categorias}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}